# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
# Triggers the workflow on push.
on:
  push:
    branches-ignore:
      - "automated/dependency_version_update"
      - "automated/dependency_version_update_tmp"
  repository_dispatch:
    types:
      check_connector_for_breaking_changes

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up Java Environment
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Grant execute permission to the gradlew script
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build the project with Gradle
      - name: Build with Gradle
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          JAVA_OPTS: -DBALLERINA_DEV_COMPILE_BALLERINA_ORG=true
        run: |
          ./gradlew build
        
      # Build Ballerina Project
      - name: Ballerina Build
        uses: ballerina-platform/ballerina-action/@nightly
        with:
          args:
            pack ./ballerina
        env:
          JAVA_HOME: /usr/lib/jvm/default-jvm
      
      # Test Ballerina Project
      - name: Ballerina Test
        uses: ballerina-platform/ballerina-action/@nightly
        with:
          args:
            test --code-coverage ./ballerina
        env:
          JAVA_HOME: /usr/lib/jvm/default-jvm
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
          QUEUE_NAME: ${{ secrets.QUEUE_NAME }}
          TOPIC_NAME: ${{ secrets.TOPIC_NAME }}
          SUBSCRIPTION_NAME1: ${{ secrets.SUBSCRIPTION_NAME1 }}
          SUBSCRIPTION_NAME2: ${{ secrets.SUBSCRIPTION_NAME2 }}
          SUBSCRIPTION_NAME3: ${{ secrets.SUBSCRIPTION_NAME3 }}

      # Read the ballerina test results
      - name: Read Ballerina Test Results
        id: test_results
        run: |
          content=`cat ./ballerina/target/report/test_results.json`                
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=testResultsJson::$content"

      # Print the code coverage information
      - name: Code Coverage
        run: |
          echo "Covered Code Lines : ${{fromJson(steps.test_results.outputs.testResultsJson).coveredLines}}"
          echo "Total Code Lines : $(expr ${{fromJson(steps.test_results.outputs.testResultsJson).missedLines}} + ${{fromJson(steps.test_results.outputs.testResultsJson).coveredLines}})"
          echo "Code Coverage Percentage : ${{fromJson(steps.test_results.outputs.testResultsJson).coveragePercentage}}"

      - name: Alert notifier on failure
        if: failure() && (github.event.action == 'check_connector_for_breaking_changes')
        run: |
          curl -X POST \
          'https://api.github.com/repos/ballerina-platform/ballerina-release/dispatches' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}' \
          --data-raw '{
            "event_type": "notify-ballerinax-connector-build-failure",
            "client_payload": {
              "repoName": "module-ballerinax-azure-service-bus",
              "workflow": "CI"
            }
          }'
